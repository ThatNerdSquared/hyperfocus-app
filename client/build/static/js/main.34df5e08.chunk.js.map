{"version":3,"sources":["timer/StartStop.tsx","timer/TimerOption.tsx","timer/AddCustomOption.tsx","timer/Timer.tsx","LoginScreen.tsx","participants/Participant.tsx","participants/ParticipantsList.tsx","App.tsx","index.tsx"],"names":["StartStop","props","buttonText","isRunning","className","id","onSubmit","toggleRunning","TimerOption","name","time","startTimer","handleDeleteOption","AddCustomOption","handleAddOption","type","value","newOption","placeholder","onChange","formChange","Timer","optionComponents","timerOptions","map","option","LoginScreen","logMeIn","loginName","Participant","username","ParticipantsList","users","forEach","user","isOnline","push","socket","io","App","state","timerStatus","minutes","seconds","pom","isIntervalSet","participants","isLoggedIn","currentUser","totalPomsToday","bind","handleNewStatus","logMeOut","setupBeforeUnloadListener","event","target","this","setState","a","preventDefault","newMinutes","data","emit","window","addEventListener","on","console","log","newStatus","pomDone","alert","parseInt","newRunning","numDigits","x","Math","max","floor","log10","abs","pomText","status","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34df5e08.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction StartStop(props: any) {\n\tlet buttonText\n\tprops.isRunning === true ? buttonText = \"Pause\" : buttonText = \"Resume\"\n\treturn (\n\t\t<div className=\"startstop\">\n\t\t\t<form\n\t\t\t\tid={props.id}\n\t\t\t\tonSubmit={props.toggleRunning}\n\t\t\t>\n\t\t\t\t<button className=\"startstop-button\">{buttonText}</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default StartStop","import React from \"react\"\n\nfunction TimerOption(props: any) {\n\treturn (\n\t\t<div className=\"single-option\">\n\t\t\t<form\n\t\t\t\tname={props.time}\n\t\t\t\tid={props.id}\n\t\t\t\tonSubmit={props.startTimer}\n\t\t\t>\n\t\t\t\t<button className=\"option-button\">{props.time}</button>\n\t\t\t</form>\n\t\t\t<form\n\t\t\t\tname={props.time}\n\t\t\t\tid={props.id}\n\t\t\t\tonSubmit={props.handleDeleteOption}\n\t\t\t>\n\t\t\t\t<button className=\"option-delete\">Delete</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default TimerOption","import React from \"react\"\n\nfunction AddCustomOption(props: any) {\n\treturn (\n\t\t<div>\n\t\t\t<form\n\t\t\t\tonSubmit={props.handleAddOption}\n\t\t\t\tclassName=\"addOption-form\"\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={props.newOption}\n\t\t\t\t\tname=\"newOption\"\n\t\t\t\t\tplaceholder=\"Add another option... \"\n\t\t\t\t\tonChange={props.formChange}\n\t\t\t\t\tclassName=\"addOption-input\"\n\t\t\t\t/>\n\t\t\t\t<button className=\"addOption-button\">Add</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default AddCustomOption ","import React from \"react\"\nimport StartStop from \"./StartStop\"\nimport TimerOption from \"./TimerOption\"\nimport AddCustomOption from \"./AddCustomOption\"\n\nfunction Timer(props: {\n\ttimerOptions: Array<number>,\n\tstartTimer: Function,\n\tid: number,\n\ttoggleRunning: Function,\n\tformChange: Function \n\tnewOption: string,\n\thandleAddOption: Function,\n\thandleDeleteOption: Function,\n\tisRunning: boolean\n}) {\n\tconst optionComponents = props.timerOptions.map(option => <TimerOption \n\t\tstartTimer={props.startTimer}\n\t\tid={props.id}\n\t\ttime={option}\n\t\thandleDeleteOption={props.handleDeleteOption}\n\t/>)\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<StartStop\n\t\t\t\tid={props.id}\n\t\t\t\ttoggleRunning={props.toggleRunning}\n\t\t\t\tisRunning={props.isRunning}\n\t\t\t/>\n\t\t\t<div className=\"options\">{optionComponents}</div>\n\t\t\t<AddCustomOption\n\t\t\t\tnewOption={props.newOption}\n\t\t\t\tformChange={props.formChange}\n\t\t\t\thandleAddOption={props.handleAddOption}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Timer","import React from \"react\"\n\nfunction LoginScreen(props: any) {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<h1 className=\"login-text\">Welcome to Hyperfocus!</h1>\n\t\t\t<h1 className=\"login-text\">What's your name?</h1>\n\t\t\t<form className=\"login-form\" onSubmit={props.logMeIn}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={props.loginName}\n\t\t\t\t\tname=\"loginName\"\n\t\t\t\t\tplaceholder=\"i.e. ThatNerd\"\n\t\t\t\t\tonChange={props.formChange}\n\t\t\t\t\tclassName=\"login-input\"\n\t\t\t\t/>\n\t\t\t\t<button className=\"login-input\">Login/Join</button>\n\t\t\t</form>\n\t\t\t<p className=\"login-text\">This is only used to show other participants who you are.</p>\n\t\t\t<p className=\"login-text\">More advanced room features and login options coming soon!</p>\n\t\t</div>\n\t)\n}\n\nexport default LoginScreen","import React from \"react\"\n\nfunction Participant(props: any) {\n\treturn (\n\t\t<div>\n\t\t\t<p>{props.username}</p>\n\t\t</div>\n\t)\n}\n\nexport default Participant","import React from \"react\"\nimport Participant from \"./Participant\"\n\nfunction ParticipantsList(props: {\n\tusers: {\n\t\tid: number,\n\t\tname: string,\n\t\ttotalPomsToday: number,\n\t\tisOnline: boolean\n\t}[]\n}) {\n\tlet users: Array<any> = []\n\tprops.users.forEach(user => {\n\t\tif (user.isOnline === true) {\n\t\t\treturn (\n\t\t\t\tusers.push(\n\t\t\t\t\t<Participant\n\t\t\t\t\t\tusername={user.name}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t})\n\treturn (\n\t\t<div>\n\t\t\t<h1>Participants</h1>\n\t\t\t{users}\n\t\t</div>\n\t)\n}\n\nexport default ParticipantsList","import React from \"react\"\nimport Timer from \"./timer/Timer\"\nimport io from \"socket.io-client\"\nimport LoginScreen from \"./LoginScreen\"\nimport ParticipantsList from \"./participants/ParticipantsList\"\n\n// const backendURL = \"http://192.168.228.111:9000/api/\"\n// const backendURL = \"http://localhost:9000/\"\n// const backendURL = \"http://192.168.228.111:9000\"\nlet backendURL\nif (process.env.NODE_ENV === 'development') {\n\tbackendURL ='http://localhost:9000/';\n}\nelse {\n\tbackendURL = \"/api\"\n}\nconst socket = io()\n\n\ntype myState = {\n\ttimerStatus: {\n\t\tid: number,\n\t\tminutes: number,\n\t\tseconds: number,\n\t\tpom: boolean,\n\t\tisRunning: boolean,\n\t\tisIntervalSet: boolean,\n\t\ttimerOptions: Array<number>,\n\t\tparticipants: Array<string>,\n\t},\n\tusers: {\n\t\tid: number,\n\t\tname: string,\n\t\ttotalPomsToday: number,\n\t\tisOnline: boolean\n\t}[],\n\tisLoggedIn: boolean,\n\tnewOption: string,\n\tloginName: string\n\tcurrentUser: {\n\t\tid: number,\n\t\tname: string,\n\t\ttotalPomsToday: number,\n\t\tisOnline: boolean\n\t}\n}\n\nclass App extends React.Component<unknown, myState> {\n\tconstructor(props: unknown) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttimerStatus: {\n\t\t\t\tid: 27,\n\t\t\t\tminutes: 10101,\n\t\t\t\tseconds: 42,\n\t\t\t\tpom: false,\n\t\t\t\tisRunning: false,\n\t\t\t\tisIntervalSet: false,\n\t\t\t\ttimerOptions: [],\n\t\t\t\tparticipants: [],\n\t\t\t},\n\t\t\tusers: [],\n\t\t\tisLoggedIn: false,\n\t\t\tnewOption: \"\",\n\t\t\tloginName: \"\",\n\t\t\tcurrentUser: {\n\t\t\t\tname: \"Guest\",\n\t\t\t\ttotalPomsToday: 0,\n\t\t\t\tisOnline: true\n\t\t\t}\n\t\t}\n\t\tthis.startTimer = this.startTimer.bind(this)\n\t\tthis.toggleRunning = this.toggleRunning.bind(this)\n\t\tthis.handleNewStatus = this.handleNewStatus.bind(this)\n\t\tthis.formChange = this.formChange.bind(this)\n\t\tthis.handleAddOption = this.handleAddOption.bind(this)\n\t\tthis.logMeIn = this.logMeIn.bind(this)\n\t\tthis.logMeOut = this.logMeOut.bind(this)\n\t\tthis.setupBeforeUnloadListener = this.setupBeforeUnloadListener.bind(this)\n\t}\n\t\n\tformChange(event: any) {\n\t\tconst name = event.target.name\n\t\tconst value = event.target.value\n\t\tthis.setState({ [name]: value })\n\t}\n\n\tasync startTimer(event: any) {\n\t\tevent.preventDefault()\n\t\tlet newMinutes = event.target.name\n\t\tlet id = event.target.id\n\t\tlet pom = this.state.timerStatus.pom\n\t\tlet data = {\n\t\t\tid: id,\n\t\t\tminutes: newMinutes,\n\t\t\tpom: pom\n\t\t}\n\t\tsocket.emit(\"startTimer\", data)\n\t\tsocket.emit(\"beginTickTock\", id)\n\t}\n\n\t// Setup the `beforeunload` event listener\n\tsetupBeforeUnloadListener() {\n\t\twindow.addEventListener(\"beforeunload\", (event) => {\n\t\t\tevent.preventDefault();\n\t\t\treturn this.logMeOut()\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tisLoggedIn: false\n\t\t})\n\t}\n\t\n\tlogMeIn(event: any) {\n\t\tevent.preventDefault()\n\t\tsocket.emit(\"join\", this.state.loginName)\n\t\tthis.setupBeforeUnloadListener()\n\t\tsocket.on(\"connectionData\", this.handleNewStatus)\n\t\tsocket.on(\"timerStarted\", this.handleNewStatus)\n\t\tsocket.on(\"timerToggled\", this.handleNewStatus)\n\t\tsocket.on(\"timerGoTickTock\", this.handleNewStatus)\n\t\tsocket.on(\"optionAdded\", this.handleNewStatus)\n\t\tsocket.on(\"optionDeleted\", this.handleNewStatus)\n\t\tsocket.on(\"userLoggedOut\", this.handleNewStatus)\n\t\tsocket.on(\"private\", this.handleNewStatus)\n\t\tif (!(\"Notification\" in window)) {\n\t\t\tconsole.log(\"This browser does not support desktop notification\");\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"Notifications are supported\");\n\t\t}\n\t}\n\n\tlogMeOut() {\n\t\tsocket.emit(\"logMeOut\", this.state.currentUser)\n\t}\n\n\thandleNewStatus(data: any) {\n\t\tif (data.timerStatus != null) {\n\t\t\tlet dataArray = data.timerStatus\n\t\t\tlet newStatus = dataArray[0]\n\t\t\tthis.setState({\n\t\t\t\ttimerStatus: newStatus\n\t\t\t})\n\t\t}\n\t\tif (data.pomDone === true) {\n\t\t\talert(\"Your work session has finished!\")\n\t\t\t// new Notification(\"Your work session is complete!\")\n\t\t}\n\t\tif (data.users != null) {\n\t\t\tlet users = data.users\n\t\t\tthis.setState({\n\t\t\t\tusers: users\n\t\t\t})\n\t\t}\n\t\tif (data.currentUser != null) {\n\t\t\tlet currentUser = data.currentUser\n\t\t\tthis.setState({\n\t\t\t\tcurrentUser: currentUser\n\t\t\t})\n\t\t}\n\t\tif (data.isLoggedIn === true) {\n\t\t\tthis.setState({\n\t\t\t\tisLoggedIn: true\n\t\t\t})\n\t\t}\n\t}\n\n\thandleAddOption(event: any) {\n\t\tevent.preventDefault()\n\t\tlet id = this.state.timerStatus.id\n\t\tlet option = this.state.newOption\n\t\tlet newOption = parseInt(option)\n\t\tlet data = {\n\t\t\tid: id,\n\t\t\toption: newOption\n\t\t}\n\t\tsocket.emit(\"addOption\", data)\n\t\tthis.setState({\n\t\t\tnewOption: \"\"\n\t\t})\n\t}\n\n\thandleDeleteOption(event: any) {\n\t\tevent.preventDefault()\n\t\tconsole.log(event)\n\t\tlet id = event.target.id\n\t\tlet option = event.target.name\n\t\tlet data = {\n\t\t\tid: id,\n\t\t\toption: option\n\t\t}\n\t\tsocket.emit(\"deleteOption\", data)\n\t}\n\n\tasync toggleRunning(event: any) {\n\t\tevent.preventDefault()\n\t\tlet newRunning\n\t\tthis.state.timerStatus.isRunning === true ? newRunning = false : newRunning = true\n\t\tlet id = event.target.id\n\t\tlet data = {\n\t\t\tid: id,\n\t\t\tisRunning: newRunning,\n\t\t}\n\t\tsocket.emit(\"toggleTimer\", data)\n\t}\n\n\trender() {\n\t\tif (this.state.isLoggedIn) {\n\t\t\tfunction numDigits(x: number) {\n\t\t\t\treturn Math.max(Math.floor(Math.log10(Math.abs(x))), 0) + 1;\n\t\t\t}\n\t\t\tlet status = this.state.timerStatus\n\t\t\tlet minutes\n\t\t\tlet seconds\n\t\t\tlet statusText\n\t\t\tlet pomText\n\t\t\tnumDigits(status.minutes) <= 1 ? minutes = `0${status.minutes}` : minutes = status.minutes\n\t\t\tnumDigits(status.seconds) <= 1 ? seconds = `0${status.seconds}` : seconds = status.seconds\n\t\t\tthis.state.timerStatus.isRunning === true ? statusText = \"In Progress\" : statusText = \"Paused\"\n\t\t\tthis.state.timerStatus.pom === true ? pomText = \"Work Session\" : pomText = \"Break Time\"\n\t\t\treturn (\n\t\t\t\t<div className=\"app\">\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<h1>{pomText}</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<h1>{`${minutes}:${seconds}`}</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"panes\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Timer\n\t\t\t\t\t\t\t\ttimerOptions={status.timerOptions}\n\t\t\t\t\t\t\t\tid={status.id}\n\t\t\t\t\t\t\t\tstartTimer={this.startTimer}\n\t\t\t\t\t\t\t\ttoggleRunning={this.toggleRunning}\n\t\t\t\t\t\t\t\tformChange={this.formChange}\n\t\t\t\t\t\t\t\tnewOption={this.state.newOption}\n\t\t\t\t\t\t\t\thandleAddOption={this.handleAddOption}\n\t\t\t\t\t\t\t\thandleDeleteOption={this.handleDeleteOption}\n\t\t\t\t\t\t\t\tisRunning={this.state.timerStatus.isRunning}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ParticipantsList\n\t\t\t\t\t\t\t\tusers={this.state.users}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<LoginScreen\n\t\t\t\t\t\tlogMeIn={this.logMeIn}\n\t\t\t\t\t\tformChange={this.formChange}\n\t\t\t\t\t\tloginName={this.state.loginName}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}